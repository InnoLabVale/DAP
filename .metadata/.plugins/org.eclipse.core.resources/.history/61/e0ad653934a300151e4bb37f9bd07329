package com.innovery.mpm.provisioning.implementations.gui.util;

import java.util.List;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import com.innovery.mpm.connection.interfaces.component.DAPBeanInterface;
import com.innovery.mpm.provisioning.implementations.gui.util.options.ProvisioningDiscount;
import com.innovery.mpm.provisioning.implementations.gui.util.options.ProvisioningMaster;
import com.innovery.mpm.provisioning.implementations.gui.util.options.ProvisioningOptionLoader;
import com.innovery.mpm.provisioning.implementations.gui.util.options.ProvisioningParameters;
import com.innovery.mpm.provisioning.implementations.gui.util.options.ProvisioningPostpone;
import com.innovery.mpm.provisioning.implementations.gui.util.options.ProvisioningTariffPlan;
import com.innovery.mpm.provisioning.implementations.util.OPTION_FAMILY;
import com.innovery.mpm.provisioning.implementations.xml.XmlScanner;
import com.innovery.mpm.provisioning.interfaces.gui.BsoResponseGridManagmentInterface;
import com.innovery.mpm.provisioning.interfaces.gui.util.ProvisioningUtilInterface;
import com.innovery.mpm.provisioning.interfaces.gui.util.ProvisioningOptionLoaderInterface;
import com.innovery.mpm.provisioning.interfaces.gui.util.options.ProvisioningDiscountInterface;
import com.innovery.mpm.provisioning.interfaces.gui.util.options.ProvisioningMasterInterface;
import com.innovery.mpm.provisioning.interfaces.gui.util.options.ProvisioningPostponeInterface;
import com.innovery.mpm.provisioning.interfaces.gui.util.options.ProvisioningTariffPlanInterface;
import com.innovery.mpm.provisioning.interfaces.gui.util.parameters.ProvisioningParametersInterface;
import com.innovery.mpm.provisioning.interfaces.xml.XmlScannerInterface;

public class ProvisioningUtil implements ProvisioningUtilInterface{

	private DAPBeanInterface components;
	
	private ButtonGroup actionButtonGroup;
	private ButtonGroup marketButtongroup;
	private ButtonGroup ctypeButtonGroup;
	
	private JComboBox optionComboboxSelection;
	
	private JTextArea textArea;
	private JButton btnExecute;
	private JFrame frame;
	
	private JTextField parameter_1_field;
	private JTextField parameter_2_field;
	private JTextField parameter_3_field;
	private JTextField parameter_4_field;
	private JTextField parameter_5_field;
	private JTextField parameter_6_field;
	
	private JLabel parameter_1_label;
	private JLabel parameter_2_label;
	private JLabel parameter_3_label;
	private JLabel parameter_4_label;
	private JLabel parameter_5_label;
	private JLabel parameter_6_label;
	
	private JRadioButton rdbtnIn;
	private JRadioButton rdbtnOut;
	private JRadioButton rdbtnBookOut;
	private JRadioButton rdbtnChange;
	private JRadioButton rdbtnGet;
	
	private JLabel discountLabel;
	private JComboBox discountComboboxSelection;
	
	private JLabel cugActionLabel;
	private ButtonGroup cugActionButtonGroup;
	private JPanel cugActionPanel;
	
	private String[] parametersList;
	private List<JLabel> labelList;
	private List<JTextField> fieldList;
	private List<String> inputParametersRegex;
	
	private ProvisioningMasterInterface master;
	private ProvisioningDiscountInterface discount;
	private ProvisioningPostponeInterface postpone;
	private ProvisioningTariffPlanInterface tariff_plan;
	
	private ProvisioningOptionLoaderInterface optionLoader;
	private ProvisioningParametersInterface option_parameters;
	private XmlScannerInterface option_scanner;
	
	private BsoResponseGridManagmentInterface gridManager;
	
	public static final int _HIDE_OPTIONAL_ONLY = 1;
	public static final int _HIDE_OPTIONAL_ACTION = 2;
	
	public ProvisioningUtil(){
		optionLoader = new ProvisioningOptionLoader();
		option_parameters = new ProvisioningParameters();
		option_scanner = new XmlScanner();
		postpone = new ProvisioningPostpone();
		discount = new ProvisioningDiscount();
		tariff_plan = new ProvisioningTariffPlan();
		master = new ProvisioningMaster();
	}
	
	/* SE MARKET E CTYPE SONO ENTRAMBI SELEZIONATI, SI CARICANO LE OPZIONI PREVISTE PER QUEL SEGMENTO UTENTE
	 */
	public void segmentSelected(){
		optionalParametersAndAction(_HIDE_OPTIONAL_ACTION);
		if(ctypeButtonGroup.getSelection()!=null && marketButtongroup.getSelection()!=null){
			optionComboboxSelection.removeAllItems();
			
			optionLoader.setOptionComboboxSelection(optionComboboxSelection);
			optionLoader.setMarketButtonGroup(marketButtongroup);
			optionLoader.setCtypeButtonGroup(ctypeButtonGroup);
			optionLoader.load();
			
			optionComboboxSelection.setEnabled(true);
		}
	}
	
	public void optionSelected(){
		optionalParametersAndAction(_HIDE_OPTIONAL_ACTION);
		if (optionComboboxSelection.getSelectedIndex()!=0) {
			String actions = null;
			option_scanner.loadSelectedOption(optionComboboxSelection, marketButtongroup, ctypeButtonGroup);
			actions = option_scanner.getActionSelectedOption();
			if (actions != null) {
				if (actions.equals(OPTION_FAMILY.POSTPONE)){
					setPostPoneClass();
					postpone.enable();
				}else if(actions.equals(OPTION_FAMILY.DISCOUNT)){
					setDiscountClass();
					discount.enable();
				}else if(actions.equals(OPTION_FAMILY.TARIFF_PLAN) || ((String) optionComboboxSelection.getSelectedItem()).startsWith("GET")){
					setTariffPlanClass();
					tariff_plan.enable();
				}else if (!actions.equals(OPTION_FAMILY.POSTPONE) && !actions.equals(OPTION_FAMILY.DISCOUNT)) {
					setMasterClass();
					master.enable(actions);
				}
			}
		} 
	}
	
	private void setPostPoneClass(){
		postpone.setComponents(components);
		postpone.setRdbtnIn(rdbtnIn);
		postpone.setRdbtnOut(rdbtnOut);
		postpone.setRdbtnBookOut(rdbtnBookOut);
		postpone.setRdbtnChange(rdbtnChange);
		postpone.setRdbtnGet(rdbtnGet);
	}
	
	private void setDiscountClass(){
		discount.setComponents(components);
		discount.setRdbtnIn(rdbtnIn);
		discount.setRdbtnOut(rdbtnOut);
		discount.setRdbtnGet(rdbtnGet);
	}
	
	private void setTariffPlanClass(){
		tariff_plan.setRdbtnIn(rdbtnIn);
		tariff_plan.setRdbtnOut(rdbtnOut);
		tariff_plan.setRdbtnBookOut(rdbtnBookOut);
		tariff_plan.setRdbtnChange(rdbtnChange);
		tariff_plan.setRdbtnGet(rdbtnGet);
	}
	
	private void setMasterClass(){
		master.setComponents(components);
		master.setRdbtnIn(rdbtnIn);
		master.setRdbtnOut(rdbtnOut);
		master.setRdbtnBookOut(rdbtnBookOut);
		master.setRdbtnChange(rdbtnChange);
		master.setRdbtnGet(rdbtnGet);
		master.setOptionComboboxSelection(optionComboboxSelection);
	}
	
	/*
	 * CERCA QUALI SONO I PARAMETRI PREVISTI PER L'OPZIONE SCELTA E PER L'AZIONE SELEZIONATA
	 */
	public String[] actionSelected() {
		if (optionComboboxSelection.getSelectedIndex()!=0  && actionButtonGroup.getSelection()!=null) {
			optionalParametersAndAction(_HIDE_OPTIONAL_ONLY);
			
			if(!optionComboboxSelection.getSelectedItem().equals("cug")){
				String parameters = null;
				parameters = option_scanner.getParameters(actionButtonGroup.getSelection().getActionCommand());
				components.getLogger().info("PARAMETERS: "+parameters);
				
				
				
				if(parameters!=null && !parameters.equals("")){
					setProvisioningParameterClass();
					
					parametersList = parameters.split("\\|");
					
					inputParametersRegex.clear();
					for (int i = 0; i < parametersList.length; i++) {
						
						String new_parameter;
						
						if(parametersList[i].contains("[") && parametersList[i].contains("]")){
							new_parameter = components.getCommonGUI().optional(parametersList[i]);
						}
						else {
							new_parameter = components.getCommonGUI().mandatory(parametersList[i]);
						}
						
						labelList.get(i).setText(new_parameter);
						inputParametersRegex.add(option_scanner.getRegex(parametersList[i]));
						
						if(labelList.get(i).getText().contains("FEEDISCOUNT")){
							option_parameters.enableParameterDiscount(i);
						}
						else{
							option_parameters.enableOtherParameters(i);
						}
					}
				}
			}
			
			else {
				setProvisioningParameterClass();
				option_parameters.enableTechnicalOptionParameters();
			}
		}
		
		return parametersList;
	}
	
	private void setProvisioningParameterClass(){
		option_parameters.setOptionComboboxSelection(optionComboboxSelection);
		option_parameters.setActionButtonGroup(actionButtonGroup);
		option_parameters.setCtypeButtonGroup(ctypeButtonGroup);
		
		option_parameters.setDiscountComboboxSelection(discountComboboxSelection);
		option_parameters.setDiscountLabelList(discountLabel);
		
		option_parameters.setLabelList(labelList);
		option_parameters.setFieldList(fieldList);
		option_parameters.setInputRegexList(inputParametersRegex);
		
		option_parameters.setCugLabel(cugActionLabel);
		option_parameters.setCugPanel(cugActionPanel);
		
		option_parameters.setParameter_1_label(parameter_1_label);
		option_parameters.setParameter_1_field(parameter_1_field);
	}
	
	public void backButtonActionPerformed() {
		if (btnExecute.getActionCommand().equals("reconnect")) {
			components.getLogger().info("Clicked on Reconnect");
			
			String redirect = components.getConnectionManagerStandard().reconnectionStandard(btnExecute.getActionCommand());
			
			textArea.setText(redirect);
			gridManager.setResponseGridAssurance(redirect);
			
			if (redirect.equals(components.getErrorMessages().get_RELOGGED())) {
				btnExecute.setText("Execute");
				btnExecute.setActionCommand("execute");
			}
			else if (redirect.equals(components.getErrorMessages().get_NOT_LOGGED_ERROR()) || 
					 redirect.equals(components.getErrorMessages().get_MPM_CONNECTION_ERROR()) || 
					 redirect.equals(components.getErrorMessages().get_MPM_ERROR())) {
				btnExecute.setText("Home");
				btnExecute.setActionCommand("home");
			}

		} else if (btnExecute.getActionCommand().equals("home")){
			components.getLogger().info("Clicked on Home");
			frame.dispose();
		}
	}

	public void setComponents(DAPBeanInterface components) {
		this.components = components;
		option_scanner.setComponents(components);
		optionLoader.setComponents(components);
	}
	
	private void optionalParametersAndAction(int toHide) {
		
		discountComboboxSelection.setVisible(false); discountLabel.setVisible(false);
		parameter_1_label.setVisible(false); parameter_1_field.setVisible(false); parameter_1_field.setText("");
		parameter_2_label.setVisible(false); parameter_2_field.setVisible(false); parameter_2_field.setText("");
		parameter_3_label.setVisible(false); parameter_3_field.setVisible(false); parameter_3_field.setText("");
		parameter_4_label.setVisible(false); parameter_4_field.setVisible(false); parameter_4_field.setText("");
		parameter_5_label.setVisible(false); parameter_5_field.setVisible(false); parameter_5_field.setText("");
		parameter_6_label.setVisible(false); parameter_6_field.setVisible(false); parameter_6_field.setText("");
		
		cugActionLabel.setVisible(false); cugActionPanel.setVisible(false); cugActionButtonGroup.clearSelection();

		if(toHide == ProvisioningUtil._HIDE_OPTIONAL_ACTION){
			
			actionButtonGroup.clearSelection();
			rdbtnIn.setEnabled(false); 
			rdbtnOut.setEnabled(false); 
			rdbtnBookOut.setEnabled(false); 
			rdbtnChange.setEnabled(false); 
			rdbtnGet.setEnabled(false);
			textArea.setText("");
		}
	}

	@Override
	public void setActionButtonGroup(ButtonGroup actionButtonGroup) {
		this.actionButtonGroup = actionButtonGroup;
	}

	@Override
	public void setMarketButtongroup(ButtonGroup marketButtongroup) {
		this.marketButtongroup = marketButtongroup;
	}

	@Override
	public void setCtypeButtonGroup(ButtonGroup ctypeButtonGroup) {
		this.ctypeButtonGroup = ctypeButtonGroup;
	}

	@Override
	public void setOptionComboboxSelection(JComboBox optionComboboxSelection) {
		this.optionComboboxSelection = optionComboboxSelection;
	}

	@Override
	public void setTextArea(JTextArea textArea) {
		this.textArea = textArea;
	}

	@Override
	public void setBtnExecute(JButton btnExecute) {
		this.btnExecute = btnExecute;
	}

	@Override
	public void setFrame(JFrame frame) {
		this.frame = frame;
	}

	@Override
	public void setParameter_1_field(JTextField parameter_1_field) {
		this.parameter_1_field = parameter_1_field;
	}

	@Override
	public void setParameter_2_field(JTextField parameter_2_field) {
		this.parameter_2_field = parameter_2_field;
	}

	@Override
	public void setParameter_3_field(JTextField parameter_3_field) {
		this.parameter_3_field = parameter_3_field;
	}

	@Override
	public void setParameter_4_field(JTextField parameter_4_field) {
		this.parameter_4_field = parameter_4_field;
	}

	@Override
	public void setParameter_5_field(JTextField parameter_5_field) {
		this.parameter_5_field = parameter_5_field;
	}

	@Override
	public void setParameter_6_field(JTextField parameter_6_field) {
		this.parameter_6_field = parameter_6_field;
	}

	@Override
	public void setParameter_1_label(JLabel parameter_1_label) {
		this.parameter_1_label = parameter_1_label;
	}

	@Override
	public void setParameter_2_label(JLabel parameter_2_label) {
		this.parameter_2_label = parameter_2_label;
	}

	@Override
	public void setParameter_3_label(JLabel parameter_3_label) {
		this.parameter_3_label = parameter_3_label;
	}

	@Override
	public void setParameter_4_label(JLabel parameter_4_label) {
		this.parameter_4_label = parameter_4_label;
	}

	@Override
	public void setParameter_5_label(JLabel parameter_5_label) {
		this.parameter_5_label = parameter_5_label;
	}

	@Override
	public void setParameter_6_label(JLabel parameter_6_label) {
		this.parameter_6_label = parameter_6_label;
	}

	@Override
	public void setRdbtnIn(JRadioButton rdbtnIn) {
		this.rdbtnIn = rdbtnIn;
	}

	@Override
	public void setRdbtnOut(JRadioButton rdbtnOut) {
		this.rdbtnOut = rdbtnOut;
	}

	@Override
	public void setRdbtnBookOut(JRadioButton rdbtnBookOut) {
		this.rdbtnBookOut = rdbtnBookOut;
	}

	@Override
	public void setRdbtnChange(JRadioButton rdbtnChange) {
		this.rdbtnChange = rdbtnChange;
	}

	@Override
	public void setRdbtnGet(JRadioButton rdbtnGet) {
		this.rdbtnGet = rdbtnGet;
	}

	@Override
	public void setDiscountLabel(JLabel discountLabel) {
		this.discountLabel = discountLabel;
	}

	@Override
	public void setDiscountComboboxSelection(JComboBox discountComboboxSelection) {
		this.discountComboboxSelection = discountComboboxSelection;
	}

	@Override
	public void setCugActionLabel(JLabel cugActionLabel) {
		this.cugActionLabel = cugActionLabel;
	}

	@Override
	public void setCugActionButtonGroup(ButtonGroup cugActionComboboxSelection) {
		this.cugActionButtonGroup = cugActionComboboxSelection;
	}

	@Override
	public void setCugActionPanel(JPanel cugActionPanel) {
		this.cugActionPanel = cugActionPanel;
	}

	@Override
	public void setLabelList(List<JLabel> labelList) {
		this.labelList = labelList;
	}

	@Override
	public void setInputParametersRegex(List<String> inputParametersRegex) {
		this.inputParametersRegex = inputParametersRegex;
	}

	@Override
	public void setMaster(ProvisioningMasterInterface master) {
		this.master = master;
	}

	@Override
	public void setDiscount(ProvisioningDiscountInterface discount) {
		this.discount = discount;
	}

	@Override
	public void setPostpone(ProvisioningPostponeInterface postpone) {
		this.postpone = postpone;
	}

	@Override
	public void setTariff_plan(ProvisioningTariffPlanInterface tariff_plan) {
		this.tariff_plan = tariff_plan;
	}

	@Override
	public void setOptionLoader(ProvisioningOptionLoaderInterface optionLoader) {
		this.optionLoader = optionLoader;
	}

	@Override
	public void setOption_parameters(ProvisioningParametersInterface option_parameters) {
		this.option_parameters = option_parameters;
	}

	@Override
	public void setOption_scanner(XmlScannerInterface option_scanner) {
		this.option_scanner = option_scanner;
	}

	public void setParametersList(String[] parametersList) {
		this.parametersList = parametersList;
	}

	@Override
	public void setGridManager(BsoResponseGridManagmentInterface gridManager) {
		this.gridManager = gridManager;
	}

	@Override
	public void setFieldList(List<JTextField> fieldList) {
		this.fieldList = fieldList;
	}
}
